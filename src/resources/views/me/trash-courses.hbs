<form name="container-form" class="mt-4" method="POST" action="/courses/handle-form-action">
    <div>
        <h3>Kho√° h·ªçc ƒë√£ xo√° </h3>
        <a href="/me/stored/courses">Danh s√°ch kho√° h·ªçc</a>
        <div class="mt-4 d-flex align-items-center">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="" id="checkbox-all" />
                <label class="form-check-label" for="checkbox-all">
                    Ch·ªçn t·∫•t c·∫£
                </label>
            </div>
            <select class="form-control-sm checkbox-select-all-option" name="action" id="option-action-form">
                <option value="default" selected>Ch·ªçn h√†nh ƒë·ªông</option>
                <option  value="destroy">Xo√° t·∫•t c·∫£</option>
                <option value="restore">Kh√¥i ph·ª•c t·∫•t c·∫£</option>
            </select>
            <button class="btn btn-primary btn-small disabled btn-submit-button">√Åp d·ª•ng</button>
        </div>
    </div>

    <table class="table mt-4">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">T√™n kho√° h·ªçc</th>
                <th scope="col">Tr√¨nh ƒë·ªô</th>
                <th scope="col">Th·ªùi gian xo√°</th>
                <td></td>
            </tr>
        </thead>
        <tbody>
            {{#each courses}}
                <tr>
                    <td><div class="form-check">
                            <input class="form-check-input" type="checkbox" value="{{this._id}}" name="courses_Id[]" />
                        </div>
                    </td>
                    <th scope="row">{{sum @index 1}}</th>
                    <td>{{this.name}}</td>
                    <td>{{this.level}}</td>
                    <td>{{this.deletedAt}}</td>

                    <!-- N√∫t kh√¥i ph·ª•c -->
                    <td>
                        <a href="#"
                           class="btn btn-link btn-restore"
                           data-id="{{this._id}}">
                           Kh√¥i ph·ª•c
                        </a>
                    </td>

                    <!-- N√∫t xo√° vƒ©nh vi·ªÖn -->
                    <td>
                        <a href="#"
                           class="btn btn-link"
                           data-bs-toggle="modal"
                           data-bs-target="#delete-courses-modal"
                           data-id="{{this._id}}">
                           Xo√° vƒ©nh vi·ªÖn
                        </a>
                    </td>
                </tr>
            {{else}}
                <tr>
                    <td colspan="5" class="text-center">Th√πng r√°c r·ªóng</td>
                </tr>
            {{/each}}
        </tbody>
    </table>
</form>

<!-- Modal Xo√° vƒ©nh vi·ªÖn -->
<div class="modal" tabindex="-1" id="delete-courses-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <p>B·∫°n c√≥ mu·ªën xo√° kho√° h·ªçc n√†y?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="submitBtnDelete">Xo√°</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ƒê√≥ng</button>
            </div>
        </div>
    </div>
</div>

<!-- Form ·∫©n -->
<form name="deleteForm" method="POST"></form>

<!-- Script x·ª≠ l√Ω -->
<script>
document.addEventListener("DOMContentLoaded", () => {
    const deleteForm = document.forms['deleteForm'];
    const checkboxAll = document.getElementById("checkbox-all")
    const courseItemCheckbox = document.getElementsByName("courses_Id[]")
    const btnSubmitButton = document.getElementsByClassName("btn-submit-button")
    const containerForm = document.getElementsByName("container-form")
    const optionActionForm = document.getElementById("option-action-form")
     const deleteCoursesModal = document.getElementById("delete-courses-modal");
    let courseId;

    // G√°n s·ª± ki·ªán click cho c√°c n√∫t Kh√¥i ph·ª•c
    const restoreButtons = document.querySelectorAll('.btn-restore');
    restoreButtons.forEach((btn) => {
        btn.addEventListener('click', function (e) {
            e.preventDefault();
            const courseId = this.getAttribute('data-id');

            console.log("Kh√¥i ph·ª•c course id:", courseId);

            // N·∫øu mu·ªën submit kh√¥i ph·ª•c:
            deleteForm.action = `/courses/${courseId}/restore?_method=PATCH`;
            deleteForm.submit();
        });
    });

    // G√°n s·ª± ki·ªán khi modal hi·ªÉn th·ªã (xo√° vƒ©nh vi·ªÖn)
    const exampleModal = document.getElementById('delete-courses-modal');
    if (exampleModal) {
        exampleModal.addEventListener('show.bs.modal', (event) => {
            const button = event.relatedTarget;
            courseId = button.getAttribute('data-id');
            const submitBtnDelete = document.getElementById("submitBtnDelete");

            submitBtnDelete.onclick = () => {
                deleteForm.action = `/courses/${courseId}/force?_method=DELETE`;
                deleteForm.submit();
            };
        });
    }
    checkboxAll.addEventListener("change",(e)=>{
            const isCheckedAll = e.target.checked
            courseItemCheckbox.forEach(checkbox=>{
                checkbox.checked = isCheckedAll

            })
                renderCheckAllSubmitBtn()
            
        });
    courseItemCheckbox.forEach((checkbox) => {
            checkbox.addEventListener("change", (e) => {
            const isCheckedAll =  courseItemCheckbox.length === document.querySelectorAll('input[name="courses_Id[]"]:checked').length;
            checkboxAll.checked=isCheckedAll
            renderCheckAllSubmitBtn()
            });
        });

    function renderCheckAllSubmitBtn(){
    const checkedCount = document.querySelectorAll('input[name="courses_Id[]"]:checked').length;

    if(checkedCount > 0 || checkboxAll.checked === true   ){
        btnSubmitButton[0].classList.remove("disabled")
    }else{
        btnSubmitButton[0].classList.add("disabled")
    }

   }
btnSubmitButton[0].addEventListener("click",(e)=>{
    e.preventDefault();
    const isSubmit = !btnSubmitButton[0].classList.contains("disabled")
    if(isSubmit && optionActionForm.value === "default"){
    return
    }

    if (optionActionForm.value === "destroy") {
            // üëâ Hi·ªán modal x√°c nh·∫≠n xo√°
            const modal = new bootstrap.Modal(deleteCoursesModal);
            modal.show();
            const submitBtnDelete = document.getElementById("submitBtnDelete");
            // üëâ X·ª≠ l√Ω khi b·∫•m "Xo√°" trong modal
            submitBtnDelete.onclick = () => {
            containerForm[0].submit();
        };
        }
   }) 
});
</script>

